name: Personal Website CI/CD
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

jobs:
  backend_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # - name: cargo check
      #   run: cargo check --all
      #   working-directory: backend

      # - name: cargo fmt check
      #   run: cargo fmt --all --check
      #   working-directory: backend

      # - name: cargo test
      #   run: cargo test --all
      #   working-directory: backend

      # - name: cargo clippy check
      #   run: cargo clippy --all --all-targets --all-features
      #   working-directory: backend

  frontend_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: "latest"
      #     cache: "npm"
      #     cache-dependency-path: frontend/package-lock.json

      # - name: Install dependencies
      #   run: npm ci
      #   working-directory: frontend

      # - name: Type check
      #   run: npm run type-check
      #   working-directory: frontend

      # - name: Lint check
      #   run: npm run lint
      #   working-directory: frontend

      # - name: Format check
      #   run: npx prettier --check .
      #   working-directory: frontend

  auto_deployment:
    runs-on: ubuntu-latest
    needs: [backend_check, frontend_check]
    # if: github.ref == 'refs/heads/main' && needs.backend-check.result == 'success' && needs.frontend-check.result == 'success'
    if: needs.backend_check.result == 'success' && needs.frontend_check.result == 'success'
    steps:
      - uses: actions/checkout@v3
      
      - name: build backend
        run: cargo build --release
        working-directory: backend

      - uses: actions/setup-node@v3
        with:
          node-version: "latest"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: build frontend
        run: |
          npm ci
          npm run build
        working-directory: frontend

      - name: package artifacts
        run: |
          mkdir -p artifacts
          cp backend/target/release/backend artifacts
          cp -r frontend/out artifacts
          tar czvf deployment.tar.gz artifacts

      - name: upload artifacts
        uses: actions/upload-artifacts@v4
        with:
          name: deployment
          path: deployment.tar.gz

